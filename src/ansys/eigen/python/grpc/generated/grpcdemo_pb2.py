# Copyright (C) 2023 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpcdemo.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0egrpcdemo.proto\x12\x08grpcdemo\"]\n\x06Vector\x12%\n\tdata_type\x18\x01 \x01(\x0e\x32\x12.grpcdemo.DataType\x12\x13\n\x0bvector_size\x18\x02 \x01(\x05\x12\x17\n\x0fvector_as_chunk\x18\x03 \x01(\x0c\"r\n\x06Matrix\x12%\n\tdata_type\x18\x01 \x01(\x0e\x32\x12.grpcdemo.DataType\x12\x13\n\x0bmatrix_rows\x18\x02 \x01(\x05\x12\x13\n\x0bmatrix_cols\x18\x03 \x01(\x05\x12\x17\n\x0fmatrix_as_chunk\x18\x04 \x01(\x0c\"\x1c\n\x0cHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\nHelloReply\x12\x0f\n\x07message\x18\x01 \x01(\t*#\n\x08\x44\x61taType\x12\x0b\n\x07INTEGER\x10\x00\x12\n\n\x06\x44OUBLE\x10\x01\x32\xea\x02\n\x08GRPCDemo\x12:\n\x08SayHello\x12\x16.grpcdemo.HelloRequest\x1a\x14.grpcdemo.HelloReply\"\x00\x12\x36\n\nFlipVector\x12\x10.grpcdemo.Vector\x1a\x10.grpcdemo.Vector\"\x00(\x01\x30\x01\x12\x36\n\nAddVectors\x12\x10.grpcdemo.Vector\x1a\x10.grpcdemo.Vector\"\x00(\x01\x30\x01\x12;\n\x0fMultiplyVectors\x12\x10.grpcdemo.Vector\x1a\x10.grpcdemo.Vector\"\x00(\x01\x30\x01\x12\x37\n\x0b\x41\x64\x64Matrices\x12\x10.grpcdemo.Matrix\x1a\x10.grpcdemo.Matrix\"\x00(\x01\x30\x01\x12<\n\x10MultiplyMatrices\x12\x10.grpcdemo.Matrix\x1a\x10.grpcdemo.Matrix\"\x00(\x01\x30\x01\x62\x06proto3')

_DATATYPE = DESCRIPTOR.enum_types_by_name['DataType']
DataType = enum_type_wrapper.EnumTypeWrapper(_DATATYPE)
INTEGER = 0
DOUBLE = 1


_VECTOR = DESCRIPTOR.message_types_by_name['Vector']
_MATRIX = DESCRIPTOR.message_types_by_name['Matrix']
_HELLOREQUEST = DESCRIPTOR.message_types_by_name['HelloRequest']
_HELLOREPLY = DESCRIPTOR.message_types_by_name['HelloReply']
Vector = _reflection.GeneratedProtocolMessageType('Vector', (_message.Message,), {
  'DESCRIPTOR' : _VECTOR,
  '__module__' : 'grpcdemo_pb2'
  # @@protoc_insertion_point(class_scope:grpcdemo.Vector)
  })
_sym_db.RegisterMessage(Vector)

Matrix = _reflection.GeneratedProtocolMessageType('Matrix', (_message.Message,), {
  'DESCRIPTOR' : _MATRIX,
  '__module__' : 'grpcdemo_pb2'
  # @@protoc_insertion_point(class_scope:grpcdemo.Matrix)
  })
_sym_db.RegisterMessage(Matrix)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), {
  'DESCRIPTOR' : _HELLOREQUEST,
  '__module__' : 'grpcdemo_pb2'
  # @@protoc_insertion_point(class_scope:grpcdemo.HelloRequest)
  })
_sym_db.RegisterMessage(HelloRequest)

HelloReply = _reflection.GeneratedProtocolMessageType('HelloReply', (_message.Message,), {
  'DESCRIPTOR' : _HELLOREPLY,
  '__module__' : 'grpcdemo_pb2'
  # @@protoc_insertion_point(class_scope:grpcdemo.HelloReply)
  })
_sym_db.RegisterMessage(HelloReply)

_GRPCDEMO = DESCRIPTOR.services_by_name['GRPCDemo']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DATATYPE._serialized_start=300
  _DATATYPE._serialized_end=335
  _VECTOR._serialized_start=28
  _VECTOR._serialized_end=121
  _MATRIX._serialized_start=123
  _MATRIX._serialized_end=237
  _HELLOREQUEST._serialized_start=239
  _HELLOREQUEST._serialized_end=267
  _HELLOREPLY._serialized_start=269
  _HELLOREPLY._serialized_end=298
  _GRPCDEMO._serialized_start=338
  _GRPCDEMO._serialized_end=700
# @@protoc_insertion_point(module_scope)
